import java.util.List;
import java.util.Arrays;

import com.Q2S.Q2S_Senior_Project.Models.QuarterClass;
import java.util.List;
global Boolean requirementMet;


rule "Life Science Elective"
when
    $classes: List() // list contains class codes
    eval(
        ($classes.contains("BIO111") ||
        $classes.contains("BIO161") ||
        $classes.contains("BOT121") ||
        $classes.contains("MCRO221") ||
        $classes.contains("MCRO224")) ||
        ($classes.contains("BIO213") && $classes.contains("BMED213"))
    )
then
    insert(Boolean.TRUE); //might need a class later to show WHICH requirement not met
end

rule "Math Elective"
when
    $classes: List()
    eval(
            $classes.contains("MATH248") ||
            $classes.contains("MATH304") ||
            $classes.contains("MATH335") ||
            $classes.contains("MATH336") ||
            $classes.contains("MATH451")
        )
then
    insert(Boolean.TRUE);
end



rule "Check all requirements"
salience -1
when
    // Count the number of met requirements
    $count: Number(intValue >= 1) from accumulate(
        Boolean(),
        count()
    )
    // Count the total number of requirements
    $total: Number(intValue > 0) from accumulate(
        $r: Boolean(),
        count($r)
    )
    // Ensure all requirements are met
    eval($count == $total)
then
    System.out.println("All requirements are met!");
end



//for degree requirements, have "validate" button to check if all met
// at the time of validate -- map all to graduating catalog so don't ahve to requirement map
//do course mappings dynamically
//go through courses and compare against each requirement

//figure out ands/ors
// need to populate database to test
//flowchart (list of classes) will be input to SE rules
// each rule is a requirement


